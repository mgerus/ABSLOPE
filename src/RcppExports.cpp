// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// ABSLOPE_approx
List ABSLOPE_approx(NumericVector start, arma::mat Xmis, arma::vec Y, double a_prior, double b_prior, double sigma, double FDR, double tol, bool known_sigma, int max_iter, bool verbose);
RcppExport SEXP _ABSLOPE_ABSLOPE_approx(SEXP startSEXP, SEXP XmisSEXP, SEXP YSEXP, SEXP a_priorSEXP, SEXP b_priorSEXP, SEXP sigmaSEXP, SEXP FDRSEXP, SEXP tolSEXP, SEXP known_sigmaSEXP, SEXP max_iterSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type start(startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xmis(XmisSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type a_prior(a_priorSEXP);
    Rcpp::traits::input_parameter< double >::type b_prior(b_priorSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type FDR(FDRSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type known_sigma(known_sigmaSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(ABSLOPE_approx(start, Xmis, Y, a_prior, b_prior, sigma, FDR, tol, known_sigma, max_iter, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ABSLOPE_ABSLOPE_approx", (DL_FUNC) &_ABSLOPE_ABSLOPE_approx, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_ABSLOPE(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
